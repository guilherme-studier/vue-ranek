{"remainingRequest":"C:\\Users\\Thiago\\Desktop\\projetos\\vue\\ranek\\vue-ranek\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Thiago\\Desktop\\projetos\\vue\\ranek\\vue-ranek\\src\\components\\FinalizarCompra.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Thiago\\Desktop\\projetos\\vue\\ranek\\vue-ranek\\src\\components\\FinalizarCompra.vue","mtime":1673729543985},{"path":"C:\\Users\\Thiago\\Desktop\\projetos\\vue\\ranek\\vue-ranek\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1656262833352},{"path":"C:\\Users\\Thiago\\Desktop\\projetos\\vue\\ranek\\vue-ranek\\node_modules\\babel-loader\\lib\\index.js","mtime":1656262828221},{"path":"C:\\Users\\Thiago\\Desktop\\projetos\\vue\\ranek\\vue-ranek\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1656262833352},{"path":"C:\\Users\\Thiago\\Desktop\\projetos\\vue\\ranek\\vue-ranek\\node_modules\\vue-loader\\lib\\index.js","mtime":1656262834291}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport UsuarioForm from \"@/components/UsuarioForm.vue\";\r\nimport { api } from \"@/services.js\";\r\nimport { mapState } from \"vuex\";\r\n\r\nexport default {\r\n  name: \"FinalizarCompra\",\r\n  components: {\r\n    UsuarioForm\r\n  },\r\n  props: [\"produto\"],\r\n  data() {\r\n    return {\r\n      erros: []\r\n    };\r\n  },\r\n  computed: {\r\n    ...mapState([\"usuario\"]),\r\n    compra() {\r\n      return {\r\n        comprador_id: this.usuario.email,\r\n        vendedor_id: this.produto.usuario_id,\r\n        produto: this.produto,\r\n        endereco: {\r\n          cep: this.usuario.cep,\r\n          rua: this.usuario.rua,\r\n          numero: this.usuario.numero,\r\n          bairro: this.usuario.bairro,\r\n          cidade: this.usuario.cidade,\r\n          estado: this.usuario.estado\r\n        }\r\n      };\r\n    }\r\n  },\r\n  methods: {\r\n    criarTransacao() {\r\n      return api.post(\"/transacao\", this.compra).then(() => {\r\n        this.$router.push({ name: \"compras\" });\r\n      });\r\n    },\r\n    async criarUsuario() {\r\n      try {\r\n        await this.$store.dispatch(\"criarUsuario\", this.$store.state.usuario);\r\n        await this.$store.dispatch(\"logarUsuario\", this.$store.state.usuario);\r\n        await this.$store.dispatch(\"getUsuario\");\r\n        await this.criarTransacao();\r\n      } catch (error) {\r\n        this.erros.push(error.response.data.message);\r\n      }\r\n    },\r\n    finalizarCompra() {\r\n      this.erros = [];\r\n      if (this.$store.state.login) {\r\n        this.criarTransacao();\r\n      } else {\r\n        this.criarUsuario();\r\n      }\r\n    }\r\n  }\r\n};\r\n",{"version":3,"sources":["FinalizarCompra.vue"],"names":[],"mappings":";;;;;;;;;;;AAWA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"FinalizarCompra.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n  <section>\r\n    <h2>Endere√ßo de Envio</h2>\r\n    <ErroNotificacao :erros=\"erros\"/>\r\n    <UsuarioForm>\r\n      <button class=\"btn\" @click.prevent=\"finalizarCompra\">Finalizar Compra</button>\r\n    </UsuarioForm>\r\n  </section>\r\n</template>\r\n\r\n<script>\r\nimport UsuarioForm from \"@/components/UsuarioForm.vue\";\r\nimport { api } from \"@/services.js\";\r\nimport { mapState } from \"vuex\";\r\n\r\nexport default {\r\n  name: \"FinalizarCompra\",\r\n  components: {\r\n    UsuarioForm\r\n  },\r\n  props: [\"produto\"],\r\n  data() {\r\n    return {\r\n      erros: []\r\n    };\r\n  },\r\n  computed: {\r\n    ...mapState([\"usuario\"]),\r\n    compra() {\r\n      return {\r\n        comprador_id: this.usuario.email,\r\n        vendedor_id: this.produto.usuario_id,\r\n        produto: this.produto,\r\n        endereco: {\r\n          cep: this.usuario.cep,\r\n          rua: this.usuario.rua,\r\n          numero: this.usuario.numero,\r\n          bairro: this.usuario.bairro,\r\n          cidade: this.usuario.cidade,\r\n          estado: this.usuario.estado\r\n        }\r\n      };\r\n    }\r\n  },\r\n  methods: {\r\n    criarTransacao() {\r\n      return api.post(\"/transacao\", this.compra).then(() => {\r\n        this.$router.push({ name: \"compras\" });\r\n      });\r\n    },\r\n    async criarUsuario() {\r\n      try {\r\n        await this.$store.dispatch(\"criarUsuario\", this.$store.state.usuario);\r\n        await this.$store.dispatch(\"logarUsuario\", this.$store.state.usuario);\r\n        await this.$store.dispatch(\"getUsuario\");\r\n        await this.criarTransacao();\r\n      } catch (error) {\r\n        this.erros.push(error.response.data.message);\r\n      }\r\n    },\r\n    finalizarCompra() {\r\n      this.erros = [];\r\n      if (this.$store.state.login) {\r\n        this.criarTransacao();\r\n      } else {\r\n        this.criarUsuario();\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\nh2 {\r\n  margin-top: 40px;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.btn {\r\n  background: #e80;\r\n}\r\n</style>\r\n"]}]}